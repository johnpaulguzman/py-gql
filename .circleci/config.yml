version: 2

references:
    docker-python35: &docker-python35
        docker:
            - image: circleci/python:3.5
              environment:
                  PY: 35

    docker-python36: &docker-python36
        docker:
            - image: circleci/python:3.6
              environment:
                  PY: 36

    docker-python37: &docker-python37
        docker:
            - image: circleci/python:3.7
              environment:
                  PY: 37

    workspace: &workspace
        attach_workspace:
            at: .

    read-cache-python-35: &read-cache-python-35
        keys:
            - py35-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}
            - py35-deps-{{ arch }}
            - py35-deps-

    read-cache-python-36: &read-cache-python-36
        keys:
            - py36-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}
            - py36-deps-{{ arch }}
            - py36-deps-

    read-cache-python-37: &read-cache-python-37
        keys:
            - py37-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}
            - py37-deps-{{ arch }}
            - py37-deps-

    write-cache-python-35: &write-cache-python-35
        key: py35-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}

    write-cache-python-36: &write-cache-python-36
        key: py36-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}

    write-cache-python-37: &write-cache-python-37
        key: py37-deps-{{ arch }}-{{ checksum "workspace/.py-cache" }}

    deps: &deps
        run:
            name: Installing dependencies
            command: |
                mkdir -p ~/.cache/pip
                virtualenv --clear --python $(which python) "venv${PY}"
                tar -C workspace -cpf - src | tar -C "venv${PY}" -xpf -
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                pip install -U -r dev-requirements.txt
                pip install -e .
                pip freeze

    run-tests-cython: &run-tests-cython
        run:
            name: Running tests after rebuilding with Cython
            command: |
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                pip install cython
                pip install -v -e .
                PY_IGNORE_IMPORTMISMATCH=1 inv test -v --junit --no-bail

    flake8: &flake8
        run:
            name: Running Flake8
            when: always
            command: |
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                inv flake8

    mypy: &mypy
        run:
            name: Running MyPy
            when: always
            command: |
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                inv mypy --junit

    test: &test
        run:
            name: Running test suite
            when: always
            command: |
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                inv test -v --coverage --junit --no-bail

    collect-tests: &collect-tests
        run:
            name: Format and move test results
            when: always
            command: |
                results="$(pwd)/workspace/test-results"
                checkout="$(pwd)/workspace/src"
                mkdir -p "${results}/python${PY}"
                . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                python -c \
                    'import sys; sys.stdout.write(sys.stdin.read().replace(sys.argv[1], sys.argv[2]))' \
                    "$(pwd)/" "${checkout}/" < .coverage >"${results}/python${PY}/.coverage" || true
                mv coverage.xml ${results}/python${PY}/results.xml || true
                mv junit.xml "${results}/python${PY}/junit.xml" || true
                mv mypy.junit.xml "${results}/python${PY}/mypy.junit.xml" || true
                mv htmlcov ${results}/python${PY} || true

    store-tests: &store-tests
        store_test_results:
            path: workspace/test-results

jobs:
    checkout:
        <<: *docker-python37
        steps:
            - run:
                  name: Prepare working directory
                  command: mkdir -p workspace/src
            - checkout: { path: workspace/src }
            - run:
                  name: Creating cachekey(s)
                  command: |
                      cd workspace
                      echo 2 >.py-cache
                      cat src/dev-requirements*.txt >> .py-cache
                      cat src/test-requirements*.txt >> .py-cache
                      cat src/requirements*.txt >> .py-cache
                      cat src/setup.py >> .py-cache
            - persist_to_workspace:
                  paths: workspace
                  root: .

    deps-35:
        <<: *docker-python35
        steps:
            - *workspace
            - restore_cache: *read-cache-python-35
            - *deps
            - save_cache:
                  <<: *write-cache-python-35
                  paths: ~/.cache/pip
            - persist_to_workspace:
                  paths: venv35
                  root: .

    deps-36:
        <<: *docker-python36
        steps:
            - *workspace
            - restore_cache: *read-cache-python-36
            - *deps
            - save_cache:
                  <<: *write-cache-python-36
                  paths: ~/.cache/pip
            - persist_to_workspace:
                  paths: venv36
                  root: .

    deps-37:
        <<: *docker-python37
        steps:
            - *workspace
            - restore_cache: *read-cache-python-37
            - *deps
            - save_cache:
                  <<: *write-cache-python-37
                  paths: ~/.cache/pip
            - persist_to_workspace:
                  paths: venv37
                  root: .

    check-35:
        <<: *docker-python35
        steps:
            - *workspace
            - restore_cache: *read-cache-python-35
            - *flake8
            - *mypy
            - *test
            - *collect-tests
            - *store-tests
            - persist_to_workspace:
                  paths: workspace/test-results/python35
                  root: .

    check-36:
        <<: *docker-python36
        steps:
            - *workspace
            - restore_cache: *read-cache-python-36
            - *flake8
            - *mypy
            - *test
            - *collect-tests
            - *store-tests
            - persist_to_workspace:
                  paths: workspace/test-results/python36
                  root: .

    check-37:
        <<: *docker-python37
        steps:
            - *workspace
            - restore_cache: *read-cache-python-37
            - *flake8
            - *mypy
            - *test
            - *collect-tests
            - *store-tests
            - persist_to_workspace:
                  paths: workspace/test-results/python37
                  root: .

    test-35-cython:
        <<: *docker-python35
        steps:
            - *workspace
            - restore_cache: *read-cache-python-35
            - *run-tests-cython

    test-36-cython:
        <<: *docker-python36
        steps:
            - *workspace
            - restore_cache: *read-cache-python-36
            - *run-tests-cython

    test-37-cython:
        <<: *docker-python37
        steps:
            - *workspace
            - restore_cache: *read-cache-python-37
            - *run-tests-cython

    collect-tests:
        <<: *docker-python37
        steps:
            - *workspace
            - run:
                  name: Collect test results across Python versions
                  command: |
                      results="$(pwd)/workspace/test-results"
                      . "venv${PY}/bin/activate" && cd workspace/src
                      mkdir -p "${results}/python"
                      ls -1 "${results}" | grep python. | while read file; do
                          cp "${results}/${file}/.coverage" ".coverage.${file}" || true
                          mv "${results}/${file}/results.xml" "${results}/${file}.xml" || true
                          mv "${results}/${file}/junit.xml" "${results}/${file}.junit.xml" || true
                          mv "${results}/${file}/mypy.junit.xml" "${results}/${file}.mypy.junit.xml" || true
                          mv "${results}/${file}" "${results}/python/${file##python}"
                      done
                      if [ -n "$(ls -1 .coverage.* 2>/dev/null || true)" ]; then
                          which coverage >/dev/null 2>&1 || pip install coverage
                          coverage erase
                          coverage combine
                          coverage report --rcfile setup.cfg
                          coverage html --rcfile setup.cfg
                          coverage xml --rcfile setup.cfg
                          mv .coverage coverage.xml htmlcov/* ${results}/python/
                      fi
            - run:
                  name: Upload coverage to Codecov
                  command: |
                      results="$(pwd)/workspace/test-results"
                      . "venv${PY}/bin/activate" && cd workspace/src
                      cd ${results}/python/
                      pip install codecov
                      codecov
            - *store-tests
            - store_artifacts: { path: workspace/test-results, destination: . }

    check-format:
        <<: *docker-python37
        steps:
            - *workspace
            - restore_cache: *read-cache-python-37
            - run:
                  name: Check file formats
                  command: |
                      . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                      inv black --check

    docs:
        <<: *docker-python37
        steps:
            - *workspace
            - restore_cache: *read-cache-python-36
            - run:
                  name: Generating documentation
                  command: |
                      mkdir -p "$(pwd)/workspace/docs/"
                      results="$(pwd)/workspace/docs"
                      . "venv${PY}/bin/activate" && cd "venv${PY}/src"
                      inv docs -s
                      mv docs/_build/* "${results}"
            - store_artifacts: { path: workspace/docs, destination: . }

workflows:
    version: 2

    build:
        jobs:
            - checkout

            - deps-35:
                  requires:
                      - checkout
            - check-35:
                  requires:
                      - deps-35

            - deps-36:
                  requires:
                      - checkout
            - check-36:
                  requires:
                      - deps-36

            - deps-37:
                  requires:
                      - checkout
            - check-37:
                  requires:
                      - deps-37

            - test-35-cython:
                  requires:
                      - check-35
            - test-36-cython:
                  requires:
                      - check-36
            - test-37-cython:
                  requires:
                      - check-37

            - check-format:
                  requires:
                      - deps-37

            - collect-tests:
                  requires:
                      - check-35
                      - check-36
                      - check-37

            - docs:
                  requires:
                      - check-35
                      - check-36
                      - check-37
                      - check-format
